{"id":-1,"name":"Onboarding diagram","userId":-1,"createdAt":"","updatedAt":"","content":{"items":[{"uid":"bI0wBh3Ufk","position":{"x":120,"y":-270},"sizes":{"width":410,"height":200},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"heading","attrs":{"level":2},"content":[{"type":"text","text":"Welcome to CodeDiagram üòÑ"}]},{"type":"paragraph"},{"type":"heading","attrs":{"level":3},"content":[{"type":"text","text":"This is a visual note-taking tool that helps you visualize your code flow better."}]}]},"color":{"bgColor":"hsla(33, 94%, 80%, 1)","bgName":"orange-l"},"nodeType":"block"},{"uid":"hyyRZE3E8u","position":{"x":-560,"y":210},"sizes":{"width":360,"height":240},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"filePathNode","content":[{"text":"src/app.js","type":"text","marks":[{"type":"bold"}]}]},{"type":"codeBlock","attrs":{"language":"javascript"},"content":[{"text":"function index() {\n  greeting()\n  makeACofee()\n  startCoding()\n}","type":"text"}]}]},"nodeType":"block"},{"uid":"6ZopTaEaDZ","position":{"x":180,"y":440},"sizes":{"width":360,"height":200},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"filePathNode","content":[{"text":"src/greeting.js","type":"text","marks":[{"type":"bold"}]}]},{"type":"codeBlock","attrs":{"language":"javascript"},"content":[{"text":"function greeting() {\n  console.log('Hello there')\n}","type":"text"}]}]},"color":{"bgColor":"hsla(214, 17%, 29%, 1)","bgName":"gray"},"nodeType":"block"},{"uid":"ytXK_ayIc1","position":{"x":120,"y":0},"sizes":{"width":410,"height":250},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"heading","attrs":{"level":1},"content":[{"type":"text","text":"To make a Code box"}]},{"type":"orderedList","attrs":{"start":1},"content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Split your editor vertically"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Open your code (for example: "},{"type":"text","marks":[{"type":"code"}],"text":"app.js"},{"type":"text","text":") side-by-side with the "},{"type":"text","marks":[{"type":"bold"}],"text":"\"Code Diagram\" tab"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Select some of your codes"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Open the VSCode command > \""},{"type":"text","marks":[{"type":"bold"}],"text":"Code Diagram: Snip Code"},{"type":"text","text":"\""}]}]}]}]},"color":{"bgColor":"hsla(33, 94%, 80%, 1)","bgName":"orange-l"},"nodeType":"block"},{"uid":"hi9UbVX1_s","position":{"x":-340,"y":-280},"sizes":{"width":280,"height":200},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"paragraph","content":[{"type":"text","text":"More settings are in the top left menu:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"}],"text":"Export to PNG"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"}],"text":"Light and Dark themes"}]}]}]}]},"nodeType":"block"},{"uid":"HduNR37Az-","position":{"x":690,"y":-270},"sizes":{"width":400,"height":305},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"heading","attrs":{"level":1},"content":[{"type":"text","text":"Some tips "},{"type":"text","marks":[{"type":"bold"}],"text":"‚òÄÔ∏è"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Double click on a blank area to create a new diagram"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"}],"text":"Quick delete"},{"type":"text","text":": select box and press Delete key"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"}],"text":"Undo"},{"type":"text","text":": Cmd/Ctrl + Z"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","marks":[{"type":"bold"}],"text":"Shortcuts"},{"type":"text","text":": open VSCode \"Keyboard Shortcuts\" and find \"Code Diagram\", there will be some commands such as:"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Snip Code"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Snip File"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"Open Diagram"}]}]}]}]}]}]},"color":{"bgColor":"hsla(211, 33%, 22%, 1)","bgName":"blue"},"nodeType":"block"},{"uid":"8FX8zhZvfx","position":{"x":400,"y":340},"sizes":{"width":190,"height":88},"autoheight":true,"blockContent":{"text":"üí° Click the crosshair icon\nat top-right of the box\nto jump back to your source codes"},"nodeType":"text"},{"uid":"ssl8nJUAUs","position":{"x":-660,"y":890},"sizes":{"width":600,"height":333},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"filePathNode","content":[{"type":"text","marks":[{"type":"bold"}],"text":"components/Dashboard.vue"}]},{"type":"heading","attrs":{"level":1},"content":[{"type":"text","text":"A more complex example"}]},{"type":"codeBlock","attrs":{"language":"vue"},"content":[{"type":"text","text":"<template>\n  <div class=\"dashboard container mx-auto my-24 grid grid-cols-2 gap-4\">\n    <gh-pr-count uid=\"prc1\" class=\"h-ful\" />\n    <gh-pr-time uid=\"prt1\" class=\"h-full\" />\n    <gh-commit-review uid=\"ghcr1\" class=\"h-full\" />\n    <gh-review-merge uid=\"ghrm1\" class=\"h-full\" />\n    <gh-pr-opening uid=\"ghpo1\" class=\"h-full col-span-2 \" />\n  </div>\n</template>"}]}]},"nodeType":"block"},{"uid":"vXiggnAqDL","position":{"x":350,"y":1120},"sizes":{"width":400,"height":109},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","content":[{"type":"text","marks":[{"type":"bold"}],"text":"modules/metrics/GhPrCount.vue"}]},{"type":"paragraph","content":[{"type":"text","text":" "}]}]},"nodeType":"block"},{"uid":"39Bjj1hf92","position":{"x":350,"y":960},"sizes":{"width":400,"height":109},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","content":[{"type":"text","marks":[{"type":"bold"}],"text":"modules/metrics/GhPrTime.vue"}]},{"type":"paragraph","content":[{"type":"text","text":" "}]}]},"nodeType":"block"},{"uid":"X6IOn6KYL5","position":{"x":350,"y":1270},"sizes":{"width":400,"height":109},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","content":[{"type":"text","marks":[{"type":"bold"}],"text":"modules/metrics/GhCommitReview.vue"}]},{"type":"paragraph","content":[{"type":"text","text":" "}]}]},"nodeType":"block"},{"uid":"Cy37gFG8GG","position":{"x":350,"y":1580},"sizes":{"width":400,"height":109},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","content":[{"type":"text","marks":[{"type":"bold"}],"text":"modules/metrics/GhReviewMerge.vue"}]},{"type":"paragraph","content":[{"type":"text","text":" "}]}]},"nodeType":"block"},{"uid":"sAYFQK0PK8","position":{"x":350,"y":1420},"sizes":{"width":400,"height":109},"autoheight":true,"blockContent":{"content":[{"type":"filePathNode","content":[{"type":"text","marks":[{"type":"bold"}],"text":"modules/metrics/GhPrOpening.vue"}]},{"type":"paragraph","content":[{"type":"text","text":" "}]}]},"nodeType":"block"},{"uid":"Nkm-yzR51j","position":{"x":880,"y":1160},"sizes":{"width":400,"height":200},"autoheight":false,"blockContent":{"type":"doc","content":[{"type":"filePathNode","content":[{"type":"text","marks":[{"type":"bold"}],"text":"components/charts/types.ts"}]},{"type":"codeBlock","attrs":{"language":"typescript"},"content":[{"type":"text","text":"interface Dataset {\n  label: string,\n  data: any\n  dataType: 'date' | 'number' | 'string'\n  mainColor: string\n}\n\ninterface Label {\n  data: any\n  dataType: 'date' | 'number' | 'string'\n  axisLabel: string\n}\n\ninterface ChartData {\n  label: Label,\n  datasets: Dataset[],\n  firstYaxis?: {\n    label: string\n  }\n}\n\ninterface TableData {\n  label: string,\n  rows: any\n}\n\ninterface LegendItem {\n  datasetIndex: number\n  fillStyle: string\n  fontColor: string\n  hidden: boolean\n  text: string\n}\n\nexport type {\n  Dataset,\n  Label,\n  ChartData,\n  TableData,\n  LegendItem\n}\n"}]}]},"color":{"bgColor":"hsla(19, 31%, 31%, 1)","bgName":"orange"},"nodeType":"block"},{"uid":"OP3MeN7s2Z","position":{"x":-204.6083803334401,"y":137.57791974209277},"sizes":{"width":400,"height":6305},"autoheight":true,"blockContent":{"type":"doc","content":[{"type":"filePathNode","attrs":{"pathToFile":"","version":1},"content":[{"type":"text","marks":[{"type":"bold"}],"text":"backend\\api\\v1\\database\\models.py"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"type":"text","text":"from sqlalchemy import (\r\n    Column,\r\n    Integer,\r\n    String,\r\n    ForeignKey,\r\n    Boolean,\r\n    DateTime,\r\n    UniqueConstraint\r\n)\r\nfrom sqlalchemy.orm import relationship\r\nfrom ..database.database import Base\r\nfrom enum import Enum\r\nfrom datetime import datetime, timedelta, timezone\r\nfrom logger import create_logger\r\n\r\n# Initialize logger\r\nlogger = create_logger(__name__)\r\n\r\nIST = timezone(timedelta(hours=5, minutes=30))\r\nlogger.info(f\"Timezone set to IST: {IST}\")\r\n\r\nclass StatusEnum(str, Enum):\r\n    \"\"\"Enum for status options\"\"\"\r\n    active = \"Active\"\r\n    inactive = \"Inactive\"\r\n    all = \"All\"\r\n\r\n\r\nclass Client(Base):\r\n    __tablename__ = \"clients\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    username = Column(String(50), nullable=False)\r\n    email = Column(String(255), unique=True, index=True, nullable=False)\r\n    hashed_password = Column(String(255), nullable=False)\r\n    is_active = Column(Boolean, default=True)\r\n    accesstype = Column(String(50), nullable=False)\r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n    updated_at = Column(DateTime, onupdate=datetime.now(IST))\r\n    \r\n    # Relationships\r\n    outlets = relationship(\"Outlet\", back_populates=\"client\", cascade=\"all, delete-orphan\")\r\n    users = relationship(\"User\", back_populates=\"client\", cascade=\"all, delete-orphan\")\r\n    brands = relationship(\"Brand\", back_populates=\"client\", cascade=\"all, delete-orphan\")\r\n    outlet_services = relationship(\"OutletService\", back_populates=\"client\", cascade=\"all, delete-orphan\")\r\n    user_services = relationship(\"UserService\", back_populates=\"client\", cascade=\"all, delete-orphan\")\r\n    user_outlets = relationship(\"UserOutlet\", back_populates=\"client\", cascade=\"all, delete-orphan\")\r\n\r\n    def __repr__(self):\r\n        return f\"<Client(id={self.id}, username={self.username})>\"\r\n\r\n\r\nclass Brand(Base):\r\n    __tablename__ = \"brands\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    brandname = Column(String(255), unique=True, index=True, nullable=False)\r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n    updated_at = Column(DateTime, onupdate=datetime.now(IST))\r\n    client_id = Column(Integer, ForeignKey(\"clients.id\"), nullable=False)\r\n\r\n    # Relationships\r\n    client = relationship(\"Client\", back_populates=\"brands\")\r\n    outlets = relationship(\"Outlet\", back_populates=\"brand\", cascade=\"all, delete-orphan\")\r\n\r\n    def __repr__(self):\r\n        return f\"<Brand(id={self.id}, brandname={self.brandname})>\"\r\n\r\n\r\nclass Outlet(Base):\r\n    __tablename__ = \"outlets\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    aggregator = Column(String(50), nullable=False)\r\n    resid = Column(String(20), nullable=False)\r\n    subzone = Column(String(50), nullable=False)\r\n    resshortcode = Column(String(100), nullable=False)\r\n    city = Column(String(50), nullable=False)\r\n    outletnumber = Column(String(20), nullable=False)\r\n    is_active = Column(Boolean, nullable=False)\r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n    updated_at = Column(DateTime, onupdate=datetime.now(IST))\r\n    client_id = Column(Integer, ForeignKey(\"clients.id\"), nullable=False)\r\n    brand_id = Column(Integer, ForeignKey(\"brands.id\"), nullable=False)\r\n\r\n    __table_args__ = (UniqueConstraint('aggregator', 'resid', name='uq_aggregator_resid'),)\r\n\r\n    # Relationships\r\n    client = relationship(\"Client\", back_populates=\"outlets\")\r\n    brand = relationship(\"Brand\", back_populates=\"outlets\")\r\n    outlet_services = relationship(\"OutletService\", back_populates=\"outlet\", cascade=\"all, delete-orphan\")\r\n    user_outlets = relationship(\"UserOutlet\", back_populates=\"outlet\", cascade=\"all, delete-orphan\")\r\n\r\n    def __repr__(self):\r\n        return f\"<Outlet(id={self.id}, outletnumber={self.outletnumber})>\"\r\n\r\n\r\nclass User(Base):\r\n    __tablename__ = \"users\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    username = Column(String(50), nullable=False)\r\n    usernumber = Column(String(20), unique=True, index=True, nullable=False)  # Changed to String\r\n    useremail = Column(String(255), unique=True, nullable=False)\r\n    is_active = Column(Boolean, default=True)\r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n    client_id = Column(Integer, ForeignKey(\"clients.id\"), nullable=False)\r\n\r\n    __table_args__ = (UniqueConstraint('usernumber', 'useremail', name='uq_number_email'),)\r\n\r\n    # Relationships\r\n    client = relationship(\"Client\", back_populates=\"users\")\r\n    user_services = relationship(\"UserService\", back_populates=\"user\", cascade=\"all, delete-orphan\")\r\n    user_outlets = relationship(\"UserOutlet\", back_populates=\"user\", cascade=\"all, delete-orphan\")\r\n\r\n    def __repr__(self):\r\n        return f\"<User(id={self.id}, username={self.username})>\"\r\n    \r\n\r\nclass Service(Base):\r\n    __tablename__ = \"services\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    servicename = Column(String(50), nullable=False)\r\n    servicevariant = Column(String(50), nullable=False)\r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n\r\n    # Relationships\r\n    outlet_services = relationship(\"OutletService\", back_populates=\"service\", cascade=\"all, delete-orphan\")\r\n    user_services = relationship(\"UserService\", back_populates=\"service\", cascade=\"all, delete-orphan\")\r\n\r\n    def __repr__(self):\r\n        return f\"<Service(id={self.id}, servicename={self.servicename})>\"\r\n\r\n\r\nclass OutletService(Base):\r\n    __tablename__ = \"outlet_services\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    outlet_id = Column(Integer, ForeignKey(\"outlets.id\", ondelete=\"CASCADE\"), nullable=False)\r\n    service_id = Column(Integer, ForeignKey(\"services.id\", ondelete=\"CASCADE\"), nullable=False)\r\n    client_id = Column(Integer, ForeignKey(\"clients.id\"), nullable=False) \r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n\r\n    __table_args__ = (UniqueConstraint('outlet_id', 'service_id', name='uq_outlet_service'),)\r\n\r\n    # Relationships\r\n    client = relationship(\"Client\", back_populates=\"outlet_services\")\r\n    outlet = relationship(\"Outlet\", back_populates=\"outlet_services\")\r\n    service = relationship(\"Service\", back_populates=\"outlet_services\")\r\n\r\n    def __repr__(self):\r\n        return f\"<OutletService(outlet_id={self.outlet_id}, service_id={self.service_id})>\"\r\n\r\n\r\nclass UserService(Base):\r\n    __tablename__ = \"user_services\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    user_id = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)\r\n    service_id = Column(Integer, ForeignKey(\"services.id\", ondelete=\"CASCADE\"), nullable=False)\r\n    client_id = Column(Integer, ForeignKey(\"clients.id\"), nullable=False) \r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n\r\n    __table_args__ = (UniqueConstraint('user_id', 'service_id', name='uq_user_service'),)\r\n\r\n    # Relationships\r\n    client = relationship(\"Client\", back_populates=\"user_services\")\r\n    user = relationship(\"User\", back_populates=\"user_services\")\r\n    service = relationship(\"Service\", back_populates=\"user_services\")\r\n\r\n    def __repr__(self):\r\n        return f\"<UserService(user_id={self.user_id}, service_id={self.service_id})>\"\r\n\r\n\r\nclass UserOutlet(Base):\r\n    __tablename__ = \"user_outlets\"\r\n    logger.debug(f\"Initializing {__tablename__} table\")\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    user_id = Column(Integer, ForeignKey(\"users.id\", ondelete=\"CASCADE\"), nullable=False)\r\n    outlet_id = Column(Integer, ForeignKey(\"outlets.id\", ondelete=\"CASCADE\"), nullable=False)\r\n    client_id = Column(Integer, ForeignKey(\"clients.id\"), nullable=False) \r\n    created_at = Column(DateTime, default=datetime.now(IST))\r\n\r\n    __table_args__ = (UniqueConstraint('user_id', 'outlet_id', name='uq_user_outlet'),)\r\n\r\n    # Relationships\r\n    client = relationship(\"Client\", back_populates=\"user_outlets\")\r\n    user = relationship(\"User\", back_populates=\"user_outlets\")\r\n    outlet = relationship(\"Outlet\", back_populates=\"user_outlets\")\r\n\r\n    def __repr__(self):\r\n        return f\"<UserOutlet(user_id={self.user_id}, outlet_id={self.outlet_id})>\"\r\n\r\n\r\nlogger.info(\"All SQLAlchemy models initialized successfully\")"}]}]}]}]},"nodeType":"block"}],"configs":{"centerX":78.57448350641221,"centerY":-101.56500884759765,"zoomLevel":0.7666666666666666},"arrowData":{"arrowsMap":{"arrow-point-bI0wBh3Ufk-bottom-point-PSPLIYKa9J-top":{"to":"point-PSPLIYKa9J-top","from":"point-bI0wBh3Ufk-bottom","label":"Normal Box","direction":"ft","selectable":true},"arrow-point-bI0wBh3Ufk-bottom-point-ytXK_ayIc1-top":{"to":"point-ytXK_ayIc1-top","from":"point-bI0wBh3Ufk-bottom","label":"Code Box","direction":"ft","selectable":true},"arrow-point-hyyRZE3E8u-right-point-6ZopTaEaDZ-left":{"to":"point-6ZopTaEaDZ-left","from":"point-hyyRZE3E8u-right","label":"call","direction":"ft","selectable":true}},"pointsMap":{"point-PSPLIYKa9J-top":{"x":805.9999797489683,"y":60,"id":"point-PSPLIYKa9J-top","direction":"top"},"point-ytXK_ayIc1-top":{"x":205.99999493724206,"y":60,"id":"point-ytXK_ayIc1-top","direction":"top"},"point-6ZopTaEaDZ-left":{"x":220,"y":605.9999898744841,"id":"point-6ZopTaEaDZ-left","direction":"left"},"point-hyyRZE3E8u-right":{"x":100,"y":606,"id":"point-hyyRZE3E8u-right","direction":"right"},"point-bI0wBh3Ufk-bottom":{"x":515.9999797489683,"y":-40,"id":"point-bI0wBh3Ufk-bottom","direction":"bottom"}},"edgesMap":{"arrow-point-bI0wBh3Ufk-bottom-point-ytXK_ayIc1-top":{"uid":"arrow-point-bI0wBh3Ufk-bottom-point-ytXK_ayIc1-top","fromNodeId":"bI0wBh3Ufk","fromHandleId":"bI0wBh3Ufk-bottom","toNodeId":"ytXK_ayIc1","toHandleId":"ytXK_ayIc1-top","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"arrow-point-hyyRZE3E8u-right-point-6ZopTaEaDZ-left":{"uid":"arrow-point-hyyRZE3E8u-right-point-6ZopTaEaDZ-left","fromNodeId":"hyyRZE3E8u","fromHandleId":"hyyRZE3E8u-right","toNodeId":"6ZopTaEaDZ","toHandleId":"6ZopTaEaDZ-left","direction":"ft","selectable":true,"type":"solid","content":{"label":"call"}},"edge-ytXK_ayIc1-ytXK_ayIc1-bottom-hyyRZE3E8u-hyyRZE3E8u-top":{"uid":"edge-ytXK_ayIc1-ytXK_ayIc1-bottom-hyyRZE3E8u-hyyRZE3E8u-top","fromNodeId":"ytXK_ayIc1","fromHandleId":"ytXK_ayIc1-bottom","toNodeId":"hyyRZE3E8u","toHandleId":"hyyRZE3E8u-top","direction":"ft","selectable":true,"type":"solid","content":{"label":"Here is an example"}},"edge-ssl8nJUAUs-ssl8nJUAUs-right-39Bjj1hf92-39Bjj1hf92-left":{"uid":"edge-ssl8nJUAUs-ssl8nJUAUs-right-39Bjj1hf92-39Bjj1hf92-left","fromNodeId":"ssl8nJUAUs","fromHandleId":"ssl8nJUAUs-right","toNodeId":"39Bjj1hf92","toHandleId":"39Bjj1hf92-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-ssl8nJUAUs-ssl8nJUAUs-right-vXiggnAqDL-vXiggnAqDL-left":{"uid":"edge-ssl8nJUAUs-ssl8nJUAUs-right-vXiggnAqDL-vXiggnAqDL-left","fromNodeId":"ssl8nJUAUs","fromHandleId":"ssl8nJUAUs-right","toNodeId":"vXiggnAqDL","toHandleId":"vXiggnAqDL-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-ssl8nJUAUs-ssl8nJUAUs-right-X6IOn6KYL5-X6IOn6KYL5-left":{"uid":"edge-ssl8nJUAUs-ssl8nJUAUs-right-X6IOn6KYL5-X6IOn6KYL5-left","fromNodeId":"ssl8nJUAUs","fromHandleId":"ssl8nJUAUs-right","toNodeId":"X6IOn6KYL5","toHandleId":"X6IOn6KYL5-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-ssl8nJUAUs-ssl8nJUAUs-right-sAYFQK0PK8-sAYFQK0PK8-left":{"uid":"edge-ssl8nJUAUs-ssl8nJUAUs-right-sAYFQK0PK8-sAYFQK0PK8-left","fromNodeId":"ssl8nJUAUs","fromHandleId":"ssl8nJUAUs-right","toNodeId":"sAYFQK0PK8","toHandleId":"sAYFQK0PK8-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-ssl8nJUAUs-ssl8nJUAUs-right-Cy37gFG8GG-Cy37gFG8GG-left":{"uid":"edge-ssl8nJUAUs-ssl8nJUAUs-right-Cy37gFG8GG-Cy37gFG8GG-left","fromNodeId":"ssl8nJUAUs","fromHandleId":"ssl8nJUAUs-right","toNodeId":"Cy37gFG8GG","toHandleId":"Cy37gFG8GG-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-hyyRZE3E8u-hyyRZE3E8u-bottom-ssl8nJUAUs-ssl8nJUAUs-top":{"uid":"edge-hyyRZE3E8u-hyyRZE3E8u-bottom-ssl8nJUAUs-ssl8nJUAUs-top","fromNodeId":"hyyRZE3E8u","fromHandleId":"hyyRZE3E8u-bottom","toNodeId":"ssl8nJUAUs","toHandleId":"ssl8nJUAUs-top","direction":"ft","selectable":true,"type":"solid","content":{"label":"A more complex example"}},"edge-X6IOn6KYL5-X6IOn6KYL5-right-Nkm-yzR51j-Nkm-yzR51j-left":{"uid":"edge-X6IOn6KYL5-X6IOn6KYL5-right-Nkm-yzR51j-Nkm-yzR51j-left","fromNodeId":"X6IOn6KYL5","fromHandleId":"X6IOn6KYL5-right","toNodeId":"Nkm-yzR51j","toHandleId":"Nkm-yzR51j-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-vXiggnAqDL-vXiggnAqDL-right-Nkm-yzR51j-Nkm-yzR51j-left":{"uid":"edge-vXiggnAqDL-vXiggnAqDL-right-Nkm-yzR51j-Nkm-yzR51j-left","fromNodeId":"vXiggnAqDL","fromHandleId":"vXiggnAqDL-right","toNodeId":"Nkm-yzR51j","toHandleId":"Nkm-yzR51j-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-39Bjj1hf92-39Bjj1hf92-right-Nkm-yzR51j-Nkm-yzR51j-left":{"uid":"edge-39Bjj1hf92-39Bjj1hf92-right-Nkm-yzR51j-Nkm-yzR51j-left","fromNodeId":"39Bjj1hf92","fromHandleId":"39Bjj1hf92-right","toNodeId":"Nkm-yzR51j","toHandleId":"Nkm-yzR51j-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-sAYFQK0PK8-sAYFQK0PK8-right-Nkm-yzR51j-Nkm-yzR51j-left":{"uid":"edge-sAYFQK0PK8-sAYFQK0PK8-right-Nkm-yzR51j-Nkm-yzR51j-left","fromNodeId":"sAYFQK0PK8","fromHandleId":"sAYFQK0PK8-right","toNodeId":"Nkm-yzR51j","toHandleId":"Nkm-yzR51j-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}},"edge-Cy37gFG8GG-Cy37gFG8GG-right-Nkm-yzR51j-Nkm-yzR51j-left":{"uid":"edge-Cy37gFG8GG-Cy37gFG8GG-right-Nkm-yzR51j-Nkm-yzR51j-left","fromNodeId":"Cy37gFG8GG","fromHandleId":"Cy37gFG8GG-right","toNodeId":"Nkm-yzR51j","toHandleId":"Nkm-yzR51j-left","direction":"ft","selectable":true,"type":"solid","content":{"label":""}}}}}}